from aiogram import Router, types
from aiogram.filters import Command
from aiogram.types import (
    ReplyKeyboardMarkup,
    KeyboardButton,
    ReplyKeyboardRemove,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
)
from bot import supabase
from handlers.callbacks import RefundCallback

router = Router()

@router.message(Command("me"))
async def open_user_menu(message: types.Message):
    kb = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üí∏ –ë–∞–ª–∏–∫")],
            [KeyboardButton(text="üí≥ –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑")],
            [KeyboardButton(text="üîô –í—ã–π—Ç–∏")]
        ],
        resize_keyboard=True
    )
    await message.answer("–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", reply_markup=kb)

@router.message(lambda m: m.text in ["üí∏ –ë–∞–ª–∏–∫", "üí≥ –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑", "üîô –í—ã–π—Ç–∏"])
async def handle_user_menu(message: types.Message):
    user_id = message.from_user.id

    if message.text == "üí∏ –ë–∞–ª–∏–∫":
        try:
            result = supabase.table("payments").select("*") \
                .eq("user_id", user_id).eq("refunded", False).execute()
            total = sum(tx["stars"] for tx in result.data)
            await message.answer(f"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {total} –∑–≤—ë–∑–¥.")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –±–∞–ª–∞–Ω—Å–∞: {e}")
            await message.answer("–ë–µ–¥–∞, –Ω–µ –≤–∏–∂—É –±–∞–ª–∞–Ω—Å")

    elif message.text == "üí≥ –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑":
        try:
            result = supabase.table("payments").select("*") \
                .eq("user_id", user_id).order("created_at", desc=True).execute()
            if not result.data:
                return await message.answer("–ù–µ—Ç—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π")

            lines = []
            buttons = []

            for i, tx in enumerate(result.data[:10]):
                status = "–†–ï–§–ù–£–¢–û ‚ùå" if tx["refunded"] else "–ê–ö–¢–ò–í–ù–ê ‚úÖ"
                lines.append(f"‚Ä¢ {tx['stars']} ‚≠ê ‚Äî {status}")
                if not tx["refunded"]:
                    buttons.append([
                        InlineKeyboardButton(
                            text=f"–†–µ—Ñ–Ω—É—Ç—å {tx['stars']}‚≠ê",
                            callback_data=RefundCallback(tx_index=i).pack()
                        )
                    ])

            text = "üí≥ –ò—Å—Ç–æ—Ä–∏—è:\n" + "\n".join(lines)
            keyboard = InlineKeyboardMarkup(inline_keyboard=buttons) if buttons else None
            await message.answer(text, reply_markup=keyboard)

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –∏—Å—Ç–æ—Ä–∏–∏: {e}")
            await message.answer("–ë–µ–¥–∞, –Ω–µ –≤–∏–∂—É –∏—Å—Ç–æ—Ä–∏—é")

    elif message.text == "üîô –í—ã–π—Ç–∏":
        await message.answer("–°–∫—Ä—ã—Ç–æ", reply_markup=ReplyKeyboardRemove())
