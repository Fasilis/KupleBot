from aiogram import Router, types
from aiogram.filters import Command
from aiogram.types import (InlineKeyboardMarkup,
                           InlineKeyboardButton, 
                           ReplyKeyboardRemove)
from bot import supabase
from handlers.start import send_start_menu
from handlers.filter import load_info, save_info



router = Router()

@router.callback_query(lambda c: c.data == "stub_profile")
async def stub_profile_handler(callback: types.CallbackQuery):
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚≠êÔ∏è –ú–æ–π –±–∞–ª–∞–Ω—Å", callback_data="–±–∞–ª–∞–Ω—Å"),
            InlineKeyboardButton(text="üìÇ –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π", callback_data="—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
        ],
        [
            InlineKeyboardButton(text="üîô –í—ã–π—Ç–∏", callback_data="–í—ã–π—Ç–∏")
        ]
    ])
    await callback.message.delete()
    await callback.message.answer(
        "üë§ <b>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:",
        reply_markup=kb,
        parse_mode="HTML"
    )
    await callback.answer()

@router.callback_query(lambda c: c.data in ["–±–∞–ª–∞–Ω—Å", "—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏", "–í—ã–π—Ç–∏"])
async def handle_user_menu_callback(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    data = callback.data

    if data == "–±–∞–ª–∞–Ω—Å":
        try:
            info = await load_info(user_id)
            total = info['balance']
            await callback.message.edit_text(f"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {total} –∑–≤—ë–∑–¥.", reply_markup=back_to_profile_kb())
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –±–∞–ª–∞–Ω—Å–∞: {e}")
            await callback.message.edit_text("–ë–µ–¥–∞, –Ω–µ –≤–∏–∂—É –±–∞–ª–∞–Ω—Å", reply_markup=back_to_profile_kb())

    elif data == "—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏":
        try:
            markup = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text='üí∂ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏—è', callback_data='transaction_type:deposit')],
                [
                    InlineKeyboardButton(text='üõí –ü–æ–∫—É–ø–∫–∏', callback_data='transaction_type:purchase'),
                    InlineKeyboardButton(text='‚õìÔ∏è‚Äçüí• –í–æ–∑–≤—Ä–∞—Ç—ã', callback_data='transaction_type:refund')
                ],
                [InlineKeyboardButton(text='üîô –ù–∞–∑–∞–¥', callback_data='stub_profile')]
            ])
            await callback.message.edit_text("–í—ã–±–µ—Ä–∏ —Ç–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:", reply_markup=markup)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –∏—Å—Ç–æ—Ä–∏–∏: {e}")
            await callback.message.edit_text("–ë–µ–¥–∞, –Ω–µ –≤–∏–∂—É –∏—Å—Ç–æ—Ä–∏—é")
            
    elif data == "–í—ã–π—Ç–∏":
        await callback.message.delete() 
        await send_start_menu(callback.message, with_banner=True)
        
def back_to_profile_kb():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="stub_profile")]
    ])