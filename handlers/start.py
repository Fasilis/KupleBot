from aiogram import Router, types
from aiogram.filters import CommandStart
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.types import FSInputFile
import os

router = Router()

def get_start_menu():
    text = (
        "üéó <b>KupleBot ‚Äî –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤ –º–∏—Ä–µ –ø–æ–¥–∞—Ä–∫–æ–≤!</b>\n\n"
        "üí† –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–∫—É–ø–∞–µ—Ç —Ä–µ–¥–∫–∏–µ –ø–æ–¥–∞—Ä–∫–∏, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –æ–Ω–∏ –ø–æ—è–≤–ª—è—é—Ç—Å—è.\n"
        "üíé –†–∞–±–æ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–æ, —Ç–æ—á–Ω–æ –∏ –±–µ–∑ –ø—Ä–æ–º–µ–¥–ª–µ–Ω–∏–π.\n\n"
        "üéü <b>–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n"
        "‚Ä¢ –£–º–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ —Ü–µ–Ω–µ, –ª–∏–º–∏—Ç–∞–º –∏ —ç–º–∏—Å—Å–∏–∏\n"
        "‚Ä¢ –ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –∞–≤—Ç–æ-—Å–∫—É–ø–∫–∞ –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º\n"
        "‚Ä¢ –ü—Ä–æ—Ñ–∏–ª—å —Å –±–∞–ª–∞–Ω—Å–æ–º, –∏—Å—Ç–æ—Ä–∏–µ–π –ø–æ–∫—É–ø–æ–∫ –∏ —Å—Ç–∞—Ç—É—Å–æ–º\n"
        "‚ú® –ü—Ä–æ—Å—Ç–æ –Ω–∞—Å—Ç—Ä–æ–π —Ñ–∏–ª—å—Ç—Ä—ã, –ø–æ–ø–æ–ª–Ω–∏ –±–∞–ª–∞–Ω—Å ‚Äî –∏ –±–æ—Ç –Ω–∞—á–Ω—ë—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞ —Ç–µ–±—è.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ üëá "
    )

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üí∏ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="stub_pay")],
        [InlineKeyboardButton(text="üë®‚Äçüè´ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", callback_data="stub_profile")],
        [InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤", callback_data="stub_settings")]
    ])

    return text, keyboard

async def send_start_menu(message: types.Message, with_banner: bool = True):
    text, keyboard = get_start_menu()

    if with_banner:
        banner = FSInputFile(os.path.abspath("static/KupleBotBanner.png"))
        await message.answer_photo(
            photo=banner,
            caption=text,
            parse_mode="HTML",
            reply_markup=keyboard
        )
    else:
        await message.answer(
            text=text,
            parse_mode="HTML",
            reply_markup=keyboard
        )

@router.message(CommandStart())
async def start_handler(message: types.Message):
    await send_start_menu(message, with_banner=True)